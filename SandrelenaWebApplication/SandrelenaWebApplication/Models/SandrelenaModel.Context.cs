//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SandrelenaWebApplication.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SandrelenaEntities_ConnectionString : DbContext
    {
        public SandrelenaEntities_ConnectionString()
            : base("name=SandrelenaEntities_ConnectionString")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Actividades> Actividades { get; set; }
        public virtual DbSet<Asignaturas> Asignaturas { get; set; }
        public virtual DbSet<AsignaturasDeSemestres> AsignaturasDeSemestres { get; set; }
        public virtual DbSet<Aulas> Aulas { get; set; }
        public virtual DbSet<Carreras> Carreras { get; set; }
        public virtual DbSet<CarrerasDeUsuarios> CarrerasDeUsuarios { get; set; }
        public virtual DbSet<DiaDisponibilidades> DiaDisponibilidades { get; set; }
        public virtual DbSet<Facultades> Facultades { get; set; }
        public virtual DbSet<Grupos> Grupos { get; set; }
        public virtual DbSet<GruposDeUsuarios> GruposDeUsuarios { get; set; }
        public virtual DbSet<Horarios> Horarios { get; set; }
        public virtual DbSet<Notas> Notas { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<PermisosDeRoles> PermisosDeRoles { get; set; }
        public virtual DbSet<Prerrequisitos> Prerrequisitos { get; set; }
        public virtual DbSet<ProfesoresDeAsignaturas> ProfesoresDeAsignaturas { get; set; }
        public virtual DbSet<RegistrosDeActividades> RegistrosDeActividades { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Semestres> Semestres { get; set; }
        public virtual DbSet<SemestresDeCarreras> SemestresDeCarreras { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual int activatePermiso(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("activatePermiso", idParameter);
        }
    
        public virtual int activateRol(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("activateRol", idParameter);
        }
    
        public virtual int addPermiso(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addPermiso", nameParameter);
        }
    
        public virtual int addRol(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addRol", nameParameter);
        }
    
        public virtual int assignPermisoToRol(string nombre_rol, string nombre_permiso)
        {
            var nombre_rolParameter = nombre_rol != null ?
                new ObjectParameter("nombre_rol", nombre_rol) :
                new ObjectParameter("nombre_rol", typeof(string));
    
            var nombre_permisoParameter = nombre_permiso != null ?
                new ObjectParameter("nombre_permiso", nombre_permiso) :
                new ObjectParameter("nombre_permiso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("assignPermisoToRol", nombre_rolParameter, nombre_permisoParameter);
        }
    
        public virtual int deactivatePermiso(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deactivatePermiso", idParameter);
        }
    
        public virtual int deactivateRol(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deactivateRol", idParameter);
        }
    
        public virtual int editNamePermiso(string actual_name, string toBe_name)
        {
            var actual_nameParameter = actual_name != null ?
                new ObjectParameter("actual_name", actual_name) :
                new ObjectParameter("actual_name", typeof(string));
    
            var toBe_nameParameter = toBe_name != null ?
                new ObjectParameter("toBe_name", toBe_name) :
                new ObjectParameter("toBe_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editNamePermiso", actual_nameParameter, toBe_nameParameter);
        }
    
        public virtual int editNameRol(string actual_name, string toBe_name)
        {
            var actual_nameParameter = actual_name != null ?
                new ObjectParameter("actual_name", actual_name) :
                new ObjectParameter("actual_name", typeof(string));
    
            var toBe_nameParameter = toBe_name != null ?
                new ObjectParameter("toBe_name", toBe_name) :
                new ObjectParameter("toBe_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editNameRol", actual_nameParameter, toBe_nameParameter);
        }
    
        public virtual int getIDPermiso(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getIDPermiso", nameParameter);
        }
    
        public virtual int getIDRol(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getIDRol", nameParameter);
        }
    
        public virtual ObjectResult<string> getPermisosOfRol(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getPermisosOfRol", nameParameter);
        }
    }
}
